version: 2.1

jobs:
  build-and-deploy:
    docker:
      - image: circleci/node:16
        # If you need the Docker CLI, you can include the following line:
        # - image: docker:stable
    working_directory: ~/sharinghub
    steps:
      - add_ssh_keys:
          fingerprints:
            - '39:84:cb:5e:ca:8e:c1:71:f6:19:ad:0c:bc:0f:78:21'
      - run:
          name: Update apt
          command: sudo apt update
      - run:
          name: Install Git
          command: sudo apt install git
      - run:
          name: Clone repository
          command: |
            mkdir -p ~/.ssh
            echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:dscdut/sharinghub.git
      - run:
          name: Setup user
          command: git config --global user.name "kiemtran.dev" && git config --global user.email "kiemtran.dev@gmail.com" && git config --global --unset credential.helper
      - run:
          name: Init git
          command: git init && git remote add origin https://github.com/dscdut/sharinghub.git && git fetch
      - run:
          name: Checkout develop
          command: git checkout develop
      - run:
          name: Pull develop
          command: git pull origin develop
      - run:
          name: Navigate source backend
          command: cd sharinghub/backend
      - run:
          name: Build packages
          command: npm install
      - run:
          name: Build packages
          command: cd sharinghub/backend && npm run build
      - run: ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run: sudo apt-get update && sudo apt-get install -y rsync
      - run:
          name: Test
          command: ls -la
      - run:
          name: send file to server
          command: ls && rsync -vr --delete --progress sharinghub/backend/dist $SSH_USER@$SSH_HOST:/home/kiemtran.dev/source

# Define the workflows that will run in your pipeline
workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy:
          filters:
            branches:
              only: develop # only deploy on the develop branch
